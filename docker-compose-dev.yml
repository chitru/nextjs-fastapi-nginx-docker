version: '3.8'

services:
    database:
        build: database
        restart: always
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - database-volume:/var/lib/postgresql/data

    nginx-reverse-proxy:
        build: nginx
        restart: always
        ports:
            - 8080:8080

    frontend:
        build:
            dockerfile: Dockerfile.dev
            context: ./web
        restart: always
        command: [ "/bin/bash", "-c", "npm run dev" ]
        depends_on:
            - nginx-reverse-proxy
        volumes:
            - ./web/frontend:/frontend
        healthcheck:
            test: ["CMD-SHELL", "curl --silent --fail http://localhost:8080 || exit 1"]
            interval: 3m
            timeout: 30s
            retries: 5
            start_period: 45s

    backend:
        build: 
            dockerfile: Dockerfile.dev
            context: ./backend
        restart: always
        command:
            [
                "/bin/bash",
                "-c",
                "python3 /backend/app/migrate.py && uvicorn app.main:app --reload --host 0.0.0.0 --port 4000"
            ]
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - ./backend/src:/backend/app
        depends_on:
            - nginx-reverse-proxy
            - database

    pgadmin:
        image: dpage/pgadmin4
        container_name: dfnvo-pgadmin
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - "5000:80"
        depends_on:
            - database

volumes:
    database-volume:
        driver: local
